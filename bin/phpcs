#!/usr/bin/env bash
#
# PHPCS wrapper script for the zed-phpcs-lsp extension.
#
# Resolution priority:
#   1. Bundled PHAR in this directory: phpcs.phar
#   2. Project composer install:      ../vendor/bin/phpcs
#   3. System phpcs on PATH
#
# Exits nonâ€‘zero with an explanatory error if no usable PHPCS can be found.
#
# This script is intentionally simple so the Zed extension's binary
# discovery logic (`bin/phpcs`) always succeeds when the PHAR is present.

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"

PHAR_PATH="${SCRIPT_DIR}/phpcs.phar"
COMPOSER_PHPCS="${PROJECT_ROOT}/vendor/bin/phpcs"

die() {
    echo "phpcs wrapper error: $*" >&2
    exit 127
}

# Ensure php is available if we will need it
ensure_php() {
    if ! command -v php >/dev/null 2>&1; then
        die "php executable not found in PATH; required to run bundled phpcs.phar"
    fi
}

# 1. Bundled PHAR
if [[ -f "${PHAR_PATH}" ]]; then
    ensure_php
    exec php "${PHAR_PATH}" "$@"
fi

# 2. Composer-installed PHPCS
if [[ -x "${COMPOSER_PHPCS}" ]]; then
    exec "${COMPOSER_PHPCS}" "$@"
fi

# 3. System PHPCS
if command -v phpcs >/dev/null 2>&1; then
    exec phpcs "$@"
fi

die "No PHPCS found (expected ${PHAR_PATH}, ${COMPOSER_PHPCS}, or a system 'phpcs' in PATH)."