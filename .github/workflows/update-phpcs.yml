name: Update PHPCS PHAR

on:
  schedule:
    # Check for updates daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if already on latest'
        required: false
        default: 'false'

permissions:
  contents: write
  pull-requests: write

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get current PHPCS version
      id: current
      run: |
        if [ -f bin/phpcs.phar ]; then
          CURRENT_VERSION=$(php bin/phpcs.phar --version | grep -oP 'version \K[0-9.]+' || echo "0.0.0")
        else
          CURRENT_VERSION="0.0.0"
        fi
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current PHPCS version: $CURRENT_VERSION"

    - name: Get latest PHPCS release
      id: latest
      run: |
        LATEST_RELEASE=$(curl -s https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases/latest)
        LATEST_VERSION=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
        LATEST_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name == "phpcs.phar") | .browser_download_url')
        PHPCBF_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name == "phpcbf.phar") | .browser_download_url')
        
        echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
        echo "phpcs_url=$LATEST_URL" >> $GITHUB_OUTPUT
        echo "phpcbf_url=$PHPCBF_URL" >> $GITHUB_OUTPUT
        echo "Latest PHPCS version: $LATEST_VERSION"

    - name: Compare versions
      id: compare
      run: |
        CURRENT="${{ steps.current.outputs.version }}"
        LATEST="${{ steps.latest.outputs.version }}"
        FORCE="${{ github.event.inputs.force_update }}"
        
        if [ "$FORCE" = "true" ] || [ "$CURRENT" != "$LATEST" ]; then
          echo "update_needed=true" >> $GITHUB_OUTPUT
          echo "Update needed: $CURRENT -> $LATEST"
        else
          echo "update_needed=false" >> $GITHUB_OUTPUT
          echo "Already on latest version: $LATEST"
        fi

    - name: Download new PHAR files
      if: steps.compare.outputs.update_needed == 'true'
      run: |
        mkdir -p bin
        
        # Download PHPCS PHAR
        if [ -n "${{ steps.latest.outputs.phpcs_url }}" ]; then
          echo "Downloading PHPCS from: ${{ steps.latest.outputs.phpcs_url }}"
          curl -L -o bin/phpcs.phar "${{ steps.latest.outputs.phpcs_url }}"
          chmod +x bin/phpcs.phar
        fi
        
        # Download PHPCBF PHAR
        if [ -n "${{ steps.latest.outputs.phpcbf_url }}" ]; then
          echo "Downloading PHPCBF from: ${{ steps.latest.outputs.phpcbf_url }}"
          curl -L -o bin/phpcbf.phar "${{ steps.latest.outputs.phpcbf_url }}"
          chmod +x bin/phpcbf.phar
        fi
        
        # Verify downloads
        php bin/phpcs.phar --version
        php bin/phpcbf.phar --version

    - name: Commit and push updates
      if: steps.compare.outputs.update_needed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        git add bin/phpcs.phar bin/phpcbf.phar
        
        git commit -m "chore: ðŸ”§ update PHPCS to ${{ steps.latest.outputs.version }}
        
        Updates PHP_CodeSniffer from ${{ steps.current.outputs.version }} to ${{ steps.latest.outputs.version }}
        
        Changes:
        - Updated bin/phpcs.phar to version ${{ steps.latest.outputs.version }}
        - Updated bin/phpcbf.phar to version ${{ steps.latest.outputs.version }}
        
        Source: https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/${{ steps.latest.outputs.version }}"
        
        git push