name: Build Cross-Platform LSP Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      test_build:
        description: 'Test build without creating release'
        required: false
        default: 'true'

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: phpcs-lsp-server
            artifact_name: phpcs-lsp-server-linux-x64
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: phpcs-lsp-server
            artifact_name: phpcs-lsp-server-linux-arm64
            cross: true
          # macOS x64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: phpcs-lsp-server
            artifact_name: phpcs-lsp-server-macos-x64
          # macOS ARM64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: phpcs-lsp-server
            artifact_name: phpcs-lsp-server-macos-arm64
          # Windows x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: phpcs-lsp-server.exe
            artifact_name: phpcs-lsp-server-windows-x64
          # Windows ARM64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            binary_name: phpcs-lsp-server.exe
            artifact_name: phpcs-lsp-server-windows-arm64

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: lsp-server/target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install cross (for Linux ARM64)
      if: matrix.cross == true
      run: cargo install cross --git https://github.com/cross-rs/cross
    
    - name: Build LSP server (native)
      if: matrix.cross != true
      working-directory: lsp-server
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Build LSP server (cross-compile)
      if: matrix.cross == true
      working-directory: lsp-server
      run: cross build --release --target ${{ matrix.target }}
    
    - name: Prepare binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist
        cp lsp-server/target/${{ matrix.target }}/release/${{ matrix.binary_name }} dist/
        chmod +x dist/${{ matrix.binary_name }}
    
    - name: Prepare binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir dist
        copy lsp-server\target\${{ matrix.target }}\release\${{ matrix.binary_name }} dist\
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.binary_name }}
        retention-days: 30

  package:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Prepare release binaries
      run: |
        mkdir -p release/bin
        # Copy and rename binaries with platform suffixes
        cp artifacts/phpcs-lsp-server-linux-x64/phpcs-lsp-server release/bin/phpcs-lsp-server-linux-x64
        cp artifacts/phpcs-lsp-server-linux-arm64/phpcs-lsp-server release/bin/phpcs-lsp-server-linux-arm64
        cp artifacts/phpcs-lsp-server-macos-x64/phpcs-lsp-server release/bin/phpcs-lsp-server-macos-x64
        cp artifacts/phpcs-lsp-server-macos-arm64/phpcs-lsp-server release/bin/phpcs-lsp-server-macos-arm64
        cp artifacts/phpcs-lsp-server-windows-x64/phpcs-lsp-server.exe release/bin/phpcs-lsp-server-windows-x64.exe
        cp artifacts/phpcs-lsp-server-windows-arm64/phpcs-lsp-server.exe release/bin/phpcs-lsp-server-windows-arm64.exe
        
        # Make Unix binaries executable
        chmod +x release/bin/phpcs-lsp-server-*
        
        # Create archive
        cd release
        tar -czf ../phpcs-lsp-binaries.tar.gz .
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          phpcs-lsp-binaries.tar.gz
          release/bin/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}